{"version":3,"sources":["components/home/partials/Navigation.js","components/home/partials/Search.js","components/home/partials/ResultItem.js","components/home/partials/NothingFound.js","helpers/Constants.js","components/LoadingMask.js","components/home/partials/ResultsList.js","components/home/HomePage.js","components/PrivateRoute.js","components/PageNotFound.js","components/Login.js","App.js","index.js"],"names":["Navigation","state","isOpen","userInfo","JSON","parse","localStorage","getItem","toggle","_this","setState","_this$state","this","react_default","a","createElement","Fragment","Navbar","color","light","expand","className","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","user","DropdownMenu","right","DropdownItem","props","logout","Component","Search","dropdownOpen","term","handleChange","e","target","value","toggleDropDown","onClickHandler","by","name","getSearchTerm","InputGroup","Input","onChange","placeholder","InputGroupButtonDropdown","addonType","outline","disabled","ResultItem","data","type","Card","CardBody","CardTitle","byline","publication_dt","CardText","book_title","book_author","CardLink","href","url","NothingFound","API_KEY","LoadingMask","role","ResultsList","searchData","loading","getResults","length","searchResults","map","item","index","key","getSearchData","searchTermData","searchTerm","_callee","response","regenerator_default","wrap","_context","prev","next","replace","axios","get","concat","sent","getData","results","stop","getLoadingMask","prevProps","prevState","_this$state2","HomePage","clear","history","push","partials_Navigation","Container","Row","Col","partials_Search","partials_ResultsList","PrivateRoute","_ref","component","rest","Object","objectWithoutProperties","react_router","assign","render","to","pathname","from","location","PageNotFound","Login","email","password","isEmailValid","isPasswordValid","invalidCredentials","event","_this$setState","_event$target","defineProperty","emailValidator","submitForm","preventDefault","validateCredentials","setItem","stringify","pass","isValid","credentials","sm","md","size","offset","Form","onSubmit","FormGroup","Label","id","valid","for","Button","App","defaults","baseURL","react_router_dom","PrivateRoute_PrivateRoute","exact","path","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e77d937.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\n\nclass Navigation extends Component {\n    state = {\n        isOpen: false,\n        userInfo: JSON.parse(localStorage.getItem('credentials'))\n    };\n\n    /**\n     * Handles dropdown functionality of split button\n     */\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    };\n\n    render() {\n        const {userInfo, isOpen} = this.state;\n        return (\n            <React.Fragment>\n                <Navbar color=\"light\" light expand=\"md\" className=\"shadow-sm fixed-top\">\n                    <NavbarBrand>NYT Best Seller's Reviews</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle}/>\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret>\n                                    {userInfo.user}\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem onClick={this.props.logout}>\n                                        Logout\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\nimport {InputGroup} from \"reactstrap\";\nimport {Input} from \"reactstrap\";\nimport {InputGroupButtonDropdown} from \"reactstrap\";\nimport {DropdownToggle} from \"reactstrap\";\nimport {DropdownMenu} from \"reactstrap\";\nimport {DropdownItem} from \"reactstrap\";\n\nclass Search extends Component {\n    state = {\n        dropdownOpen: false,\n        term: ''\n    };\n\n    /**\n     * Handles search input changes, sets them into components state\n     * @param e\n     */\n    handleChange = (e) => {\n        this.setState({\n            term: e.target.value,\n        });\n    };\n\n    /**\n     * Handles dropdown functionality of split button\n     */\n    toggleDropDown = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    };\n\n    /**\n     * On click of author or title button, collects data from local state, sends them to parent component via props\n     * @param e\n     */\n    onClickHandler = (e) => {\n        const by = e.target.name;\n        const {term} = this.state;\n        if (term) {\n            this.setState({\n                term: '',\n            });\n            this.props.getSearchTerm({by, term});\n        }\n    };\n\n    render() {\n        const {term} = this.state;\n        return (\n            <InputGroup className=\"search-input\">\n                <Input\n                    onChange={this.handleChange}\n                    value={this.state.term}\n                    placeholder=\"enter search term here\"/>\n                <InputGroupButtonDropdown\n                    addonType=\"append\"\n                    isOpen={this.state.dropdownOpen}\n                    toggle={this.toggleDropDown}>\n                    <DropdownToggle caret outline color=\"info\">\n                        Search by...\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem\n                            name=\"author\"\n                            disabled={!term}\n                            onClick={this.onClickHandler}>\n                            Author\n                        </DropdownItem>\n                        <DropdownItem\n                            name=\"title\"\n                            disabled={!term}\n                            onClick={this.onClickHandler}>\n                            Title\n                        </DropdownItem>\n                    </DropdownMenu>\n                </InputGroupButtonDropdown>\n            </InputGroup>\n        );\n    }\n}\nexport default Search;\n","import React from 'react';\nimport {Card, CardBody, CardLink, CardText, CardTitle} from \"reactstrap\";\n\nexport default function ResultItem(props){\n    const {data, type} = props;\n    return (\n        <Card className=\"result-item shadow-sm\">\n            <CardBody>\n                <CardTitle>Review by {data.byline},\n                    <small className=\"text-muted ml-2\">\n                        published on {data.publication_dt}\n                    </small>\n                </CardTitle>\n                <CardText>\n                    {type === 'author' ? \"Title \" : \"Authored by \"}\n                    <strong>\n                        {type === 'author' ? data.book_title : data.book_author}\n                    </strong>\n                </CardText>\n                <CardLink href={data.url} target=\"_blank\">go to review...</CardLink>\n            </CardBody>\n        </Card>\n    );\n}\n","import React from 'react';\n\nexport default function NothingFound() {\n    return (\n        <div className=\"nothing-found\">\n            No results found for following term, please try again with a different term.\n        </div>\n    );\n}\n","// NYT developer app key, used for making calls to backend\nexport const API_KEY = 'ITRgdR439cpszVmLRlnryw4jdtf24EhS';","import React from 'react';\n\nexport default function LoadingMask() {\n    return (\n        <div className=\"text-center loading-mask\">\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport ResultItem from \"./ResultItem\";\nimport NothingFound from \"./NothingFound\";\nimport axios from 'axios';\n\nimport {API_KEY} from \"../../../helpers/Constants\";\nimport LoadingMask from \"../../LoadingMask\";\n\nclass ResultsList extends Component {\n    state = {\n        by: '',\n        searchData: null,\n        loading: false\n    };\n\n    /**\n     * Based on search data from local state, maps search data items or returns nothing found component\n     * @return {*}\n     */\n    getResults = () => {\n        const {searchData, by} = this.state;\n        if (searchData.length) {\n            const searchResults = searchData.map(\n                (item, index) => {\n                    return (\n                        <ResultItem key={index}\n                                    data={item}\n                                    type={by}/>\n                    );\n                }\n            );\n            return (\n                <div>\n                    <small className=\"results-found\">results found:{searchData.length}</small>\n                    {searchResults}\n                </div>\n            )\n        }\n        else {\n            return <NothingFound/>\n        }\n    };\n\n    /**\n     * Handles reloading of results list component, if it gets new props, reloads the component with new data\n     * @param prevProps\n     * @param prevState\n     */\n    componentDidUpdate(prevProps, prevState){\n        if (this.state.searchData === prevState.searchData) {\n            if (!this.state.loading) {\n                this.setState({loading: true});\n            }\n            this.getSearchData();\n        }\n    }\n\n    /**\n     * Checking if there is any search data passed. If true, retrieves data from API\n     */\n    getSearchData = () => {\n        const {searchTermData} = this.props;\n        if (searchTermData) {\n            this.searchTerm(searchTermData);\n        }\n    };\n\n    /**\n     * Async call to API, gets data based on search term data\n     * @param searchTermData\n     * @return {Promise<void>}\n     */\n    searchTerm = async (searchTermData) => {\n        let {by, term} = searchTermData;\n        if (by === 'author') {\n            term = term.replace(/\\s+/g, \"%20\");\n        }\n        const response = await axios.get(`reviews.json?${by}=${term}&api-key=${API_KEY}`);\n        if (response.data) {\n            this.getData(by, response.data.results);\n        }\n    };\n\n    /**\n     * Sets state with search data coming from the API call\n     * @param by\n     * @param searchData\n     */\n    getData = (by, searchData) => {\n        this.setState({\n            by,\n            searchData,\n            loading: false\n        })\n    };\n\n    /**\n     * Returns loading mask component\n     * @return {*}\n     */\n    getLoadingMask = () => {\n        return (\n            <LoadingMask/>\n        )\n    };\n\n    render(){\n        let {searchData, loading} = this.state;\n        return (\n            <React.Fragment>\n                {searchData && !loading ? this.getResults() : ''}\n                {loading ? this.getLoadingMask() : ''}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResultsList;\n","import React, {Component} from 'react';\nimport {Col, Container, Row} from \"reactstrap\";\nimport Navigation from \"./partials/Navigation\";\nimport Search from \"./partials/Search\";\nimport ResultsList from \"./partials/ResultsList\";\n\nclass HomePage extends Component {\n    state = {\n        searchTermData: null\n    };\n\n    /**\n     * On logout button click, clear local storage, redirect user to login page\n     */\n    logout = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    /**\n     * Get search term data from search component, pass it down to results list component\n     * @param searchTermData\n     */\n    getSearchTerm = (searchTermData) => {\n        this.setState({\n            searchTermData\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <Navigation logout={this.logout}/>\n                <Container className=\"home-page-container\">\n                    <Row>\n                        <Col>\n                            <Search getSearchTerm={this.getSearchTerm}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <ResultsList searchTermData={this.state.searchTermData}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport const PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => {\n            let component = <Component {...props} />;\n\n            // ask if any credentials have been set into localStorage.\n            // If yes, let user user go to home page\n            const credentials = localStorage.getItem('credentials');\n            if (!credentials) {\n                component = <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n            }\n            return component;\n        }}/>\n    );\n};\n","import React from 'react';\n\nexport default function PageNotFound() {\n    return (\n        <div className=\"container h-100\">\n            <div className=\"row h-100 justify-content-center align-items-center\">\n                <h1> Page Not Found :(</h1>\n            </div>\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport * as emailValidator from 'email-validator';\nimport {Container, Col, Row, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        isEmailValid: false,\n        isPasswordValid: false,\n        invalidCredentials: false\n    };\n\n    /**\n     * Collect value from current active input, sets those values in local state\n     * @param event\n     */\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value,\n            invalidCredentials: false\n        });\n        if (name === 'email') {\n            const isEmailValid = emailValidator.validate(value);\n            this.setState({\n                isEmailValid\n            })\n        }\n        else {\n            const isPasswordValid = value.length > 5;\n            this.setState({\n                isPasswordValid\n            })\n        }\n    };\n\n    /**\n     * Collect login form values, set values into local state, check credentials validity\n     * @param e\n     */\n    submitForm = (e) => {\n        e.preventDefault();\n        const {\n            email,\n            password\n        } = this.state;\n\n        // valid email is test@gmail.com / password is test123\n        // this part is hard coded, it would be replaced with actual api call for authentication\n        const isValid = this.validateCredentials(email, password);\n        if (isValid) {\n            localStorage.setItem('credentials', JSON.stringify({user: 'test@gmail.com'}));\n            this.props.history.push(\"/\");\n        }\n        else {\n            this.setState({\n                invalidCredentials: true\n            })\n        }\n    };\n\n    /**\n     * Check if passed credentials are equal to hardcoded values\n     * @param email\n     * @param pass\n     * @returns {boolean}\n     */\n    validateCredentials = (email, pass) => {\n        let isValid = false;\n        if (email === 'test@gmail.com' && pass === 'test123') {\n            isValid = true;\n        }\n        return isValid;\n    };\n\n    render() {\n        const {\n            isEmailValid,\n            isPasswordValid,\n            invalidCredentials\n        } = this.state;\n        const credentials = isEmailValid && isPasswordValid;\n        return (\n            <Container className=\"h-100\">\n                <Row className=\"align-items-center h-100\">\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <Form\n                            className=\"p-4 border shadow-sm\"\n                            onSubmit={this.submitForm}>\n                            <h5 className=\"text-uppercase mb-4\">Sign In</h5>\n\n                            <FormGroup>\n                                <Label className=\"email-label\">Email\n                                     <span className=\"text-danger float-right\">\n                                        {credentials && invalidCredentials ? 'Invalid Credentials. Please, try again.' : ''}\n                                     </span>\n                                </Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"userEmail\"\n                                    placeholder=\"enter email address here\"\n                                    valid={this.state.isEmailValid}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"userPassword\"\n                                    placeholder=\"*******\"\n                                    valid={this.state.isPasswordValid}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                            <div className=\"clearfix\">\n                                <Button\n                                    outline\n                                    color=\"primary\"\n                                    className=\"float-right\"\n                                    disabled={!credentials}>\n                                    Submit\n                                </Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport HomePage from \"./components/home/HomePage\";\nimport {PrivateRoute} from \"./components/PrivateRoute\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport Login from \"./components/Login\";\n\nclass App extends Component {\n    /**\n     * Set api default url for any http requests\n     */\n    componentDidMount(){\n        axios.defaults.baseURL = 'https://api.nytimes.com/svc/books/v3';\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <PrivateRoute exact path=\"/\" component={HomePage}/>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route component={PageNotFound}/>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}